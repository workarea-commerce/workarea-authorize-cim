# frozen_string_literal: true
module Workarea
  decorate Payment::Refund::CreditCard, with: :cim do
    def complete!
      return false unless tender.valid_capture_date?

      validate_reference!

      transaction.response = handle_active_merchant_errors do
        gateway.create_customer_profile_transaction_for_refund(options)
      end
    end

    private

    def options
      {
        transaction: {
          customer_profile_id: customer_profile_id,
          customer_payment_profile_id: customer_payment_profile_id,
          amount: refund_amount,
          trans_id: transaction.reference.response.params['direct_response']['transaction_id'],
          order: {
            invoice_number: tender.payment.id.first(20) # auth net has max length 20 for this field
          }
        }
      }
    end

    def refund_amount
      transaction.amount.to_s.to_f
    end

    def customer_profile_id
      tender.gateway_profile_id
    end

    def customer_payment_profile_id
      tender.token
    end
  end
end
